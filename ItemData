-- ItemData.lua
-- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÄ‡∏Å‡∏° (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï)
-- Version: 1.4.0 - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Crystal Items

-- Constants
local ITEM_TYPES = {
	GENERAL = 1,    -- ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
	EQUIPMENT = 2,  -- ‡∏≠‡∏≤‡∏ß‡∏∏‡∏ò‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡∏£‡∏≤‡∏∞
	SKILL = 3,      -- ‡∏Ñ‡∏±‡∏°‡∏†‡∏µ‡∏£‡πå‡∏™‡∏Å‡∏¥‡∏•
	SPECIAL = 4     -- ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏û‡∏¥‡πÄ‡∏®‡∏©/‡πÄ‡∏Ñ‡∏ß‡∏™
}

local EQUIPMENT_SLOTS = {
	WEAPON = 1,
	HELMET = 2,
	ARMOR = 3,
	GLOVES = 4,
	BOOTS = 5,
	ACCESSORY = 6
}

local ItemData = {}

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡πÄ‡∏ó‡∏° (‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏î‡∏¢ InventoryService)
ItemData.UseHandlers = ItemData.UseHandlers or {}

-- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏° DiceRollBonus
ItemData.Items = {
	-- ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÄ‡∏î‡∏¥‡∏°
	test_item = {
		id = "test_item",
		name = "Test Item",
		description = "This is a test item for inventory system.",
		type = ITEM_TYPES.GENERAL,
		rarity = 1,
		stackable = true,
		maxStack = 99,
		sellPrice = 10,
		buyPrice = 20,
		usable = true,
		consumable = true,
		iconId = "rbxassetid://6675226918",
		stats = {
			hp = 50
		}
	},

	-- ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÉ‡∏´‡∏°‡πà: ‡πÄ‡∏ï‡πã‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ï‡πâ‡∏° +1
	dice_bonus_1 = {
		id = "dice_bonus_1",
		name = "BonusDice +1",
		description = "Add your dice 1",
		type = ITEM_TYPES.GENERAL,
		rarity = 2,
		stackable = true,
		maxStack = 5,
		sellPrice = 100,
		buyPrice = 300,
		usable = true,
		consumable = true,
		iconId = "rbxassetid://122493284803076", -- ‡∏£‡∏π‡∏õ‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤
		stats = {
			diceRollBonus = 1
		}
	},

	-- ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÉ‡∏´‡∏°‡πà: ‡πÄ‡∏ï‡πã‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ï‡πâ‡∏° +2
	dice_bonus_2 = {
		id = "dice_bonus_2",
		name = "BonusDice +2",
		description = "Add your Dice 2",
		type = ITEM_TYPES.GENERAL,
		rarity = 3,
		stackable = true,
		maxStack = 3,
		sellPrice = 250,
		buyPrice = 600,
		usable = true,
		consumable = true,
		iconId = "rbxassetid://106756897158809", -- ‡∏£‡∏π‡∏õ‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤
		stats = {
			diceRollBonus = 2
		}
	},

	-- ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÉ‡∏´‡∏°‡πà: ‡∏¢‡∏≤‡∏ü‡∏∑‡πâ‡∏ô‡∏û‡∏•‡∏±‡∏á
	health_potion = {
		id = "health_potion",
		name = "Health Potion",
		description = "‡∏ü‡∏∑‡πâ‡∏ô‡∏û‡∏•‡∏±‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï 50 ‡∏´‡∏ô‡πà‡∏ß‡∏¢",
		type = ITEM_TYPES.GENERAL,
		rarity = 1,
		stackable = true,
		maxStack = 10,
		sellPrice = 50,
		buyPrice = 150,
		usable = true,
		consumable = true,
		iconId = "rbxassetid://7060145106", -- ‡∏£‡∏π‡∏õ‡∏Ç‡∏ß‡∏î‡∏¢‡∏≤
		stats = {
			hp = 50
		}
	},

	-- ‡πÑ‡∏≠‡πÄ‡∏ó‡∏° Crystal (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡∏°‡πà)
	crystal_1 = {
		id = "crystal_1",
		name = "Crystal 1",
		description = "‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤ 1 ‡∏ä‡πà‡∏≠‡∏á‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á",
		type = ITEM_TYPES.GENERAL,
		rarity = 1,
		stackable = true,
		maxStack = 5,
		sellPrice = 100,
		buyPrice = 500,
		usable = true,
		consumable = true,
		iconId = "rbxassetid://6675226140",
		stats = {
			move = 1
		}
	},

	crystal_2 = {
		id = "crystal_2",
		name = "Crystal 2",
		description = "‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤ 2 ‡∏ä‡πà‡∏≠‡∏á‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á",
		type = ITEM_TYPES.GENERAL,
		rarity = 2,
		stackable = true,
		maxStack = 5,
		sellPrice = 200,
		buyPrice = 700,
		usable = true,
		consumable = true,
		iconId = "rbxassetid://6675226140",
		stats = {
			move = 2
		}
	},

	crystal_3 = {
		id = "crystal_3",
		name = "Crystal 3",
		description = "‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤ 3 ‡∏ä‡πà‡∏≠‡∏á‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á",
		type = ITEM_TYPES.GENERAL,
		rarity = 3,
		stackable = true,
		maxStack = 5,
		sellPrice = 300,
		buyPrice = 1000,
		usable = true,
		consumable = true,
		iconId = "rbxassetid://6675226140",
		stats = {
			move = 3
		}
	}
}

-- ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Equipment ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏´‡∏•‡∏≤‡∏¢‡∏ï‡∏≤‡∏£‡∏≤‡∏á)
ItemData.Equipment = {
	-- ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö
	test_equipment = {
		id = "test_equipment",
		name = "Test Equipment",
		description = "This is a test equipment for inventory system.",
		type = ITEM_TYPES.EQUIPMENT,
		subType = EQUIPMENT_SLOTS.WEAPON,
		rarity = 2,
		stackable = false,
		maxStack = 1,
		sellPrice = 100,
		buyPrice = 300,
		usable = false,
		iconId = "rbxassetid://6675226140",
		stats = {
			attack = 10,
			defense = 5
		}
	}
}

-- ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á Item
ItemData.ItemTilePool = {
	-- ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡∏° (‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì)
	{id = "health_potion", weight = 20},
	{id = "dice_bonus_1", weight = 15},    
	{id = "dice_bonus_2", weight = 10},
	{id = "crystal_1", weight = 20},
	{id = "crystal_2", weight = 15},
	{id = "crystal_3", weight = 10},
}

-- ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏à‡∏≤‡∏Å ID
function ItemData.GetItemById(itemId)
	-- ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
	if ItemData.Items[itemId] then
		return ItemData.Items[itemId]
	end

	-- ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
	if ItemData.Equipment[itemId] then
		return ItemData.Equipment[itemId]
	end

	return nil
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
function ItemData.GetItemsByType(itemType)
	local result = {}

	-- ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
	for id, item in pairs(ItemData.Items) do
		if item.type == itemType then
			table.insert(result, item)
		end
	end

	-- ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
	for id, item in pairs(ItemData.Equipment) do
		if item.type == itemType then
			table.insert(result, item)
		end
	end

	return result
end

-- ‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏à‡∏≤‡∏Å ItemTilePool
function ItemData.GetRandomItemFromPool()
	local totalWeight = 0
	for _, itemInfo in ipairs(ItemData.ItemTilePool) do
		totalWeight = totalWeight + itemInfo.weight
	end

	local randomValue = math.random(1, totalWeight)
	local currentWeight = 0

	for _, itemInfo in ipairs(ItemData.ItemTilePool) do
		currentWeight = currentWeight + itemInfo.weight
		if randomValue <= currentWeight then
			return ItemData.GetItemById(itemInfo.id)
		end
	end

	-- ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏û‡∏ö (‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô)
	return ItemData.GetItemById("health_potion")
end

-- ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà
ItemData.ITEM_TYPES = ITEM_TYPES
ItemData.EQUIPMENT_SLOTS = EQUIPMENT_SLOTS

-- ====== ‡πÄ‡∏û‡∏¥‡πà‡∏° UseHandlers ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏° DiceBonus ======

-- Lucky Dice +1
ItemData.UseHandlers.dice_bonus_1 = function(player, itemData)
	-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
	local turnSystem = _G.GameManager and _G.GameManager.turnSystem
	if not turnSystem then
		return false, "‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
	end

	if turnSystem:GetCurrentPlayerTurn() ~= player.UserId then
		return false, "‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"
	end

	-- ‡πÅ‡∏à‡πâ‡∏á client ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤
	local remotes = game:GetService("ReplicatedStorage"):WaitForChild("Remotes")
	local inventoryRemotes = remotes:WaitForChild("InventoryRemotes")
	local diceBonusEvent = inventoryRemotes:FindFirstChild("DiceBonus")

	if not diceBonusEvent then
		diceBonusEvent = Instance.new("RemoteEvent")
		diceBonusEvent.Name = "DiceBonus"
		diceBonusEvent.Parent = inventoryRemotes
	end

	-- ‡∏™‡πà‡∏á‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡πÑ‡∏õ‡∏¢‡∏±‡∏á client
	diceBonusEvent:FireClient(player, 1)

	-- ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
	local message = "üé≤ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ï‡πâ‡∏°‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤ +1 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≠‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ!"

	-- ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå
	pcall(function()
		local soundService = game:GetService("SoundService")
		local sound = soundService:FindFirstChild("ItemUse") or Instance.new("Sound", soundService)
		sound.Name = "ItemUse"
		sound.SoundId = "rbxassetid://6895079853"
		sound.Volume = 0.7
		sound:Play()
	end)

	return true, message
end

-- Magical Dice +2
ItemData.UseHandlers.dice_bonus_2 = function(player, itemData)
	-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
	local turnSystem = _G.GameManager and _G.GameManager.turnSystem
	if not turnSystem then
		return false, "‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
	end

	if turnSystem:GetCurrentPlayerTurn() ~= player.UserId then
		return false, "‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"
	end

	-- ‡πÅ‡∏à‡πâ‡∏á client ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤
	local remotes = game:GetService("ReplicatedStorage"):WaitForChild("Remotes")
	local inventoryRemotes = remotes:WaitForChild("InventoryRemotes")
	local diceBonusEvent = inventoryRemotes:FindFirstChild("DiceBonus")

	if not diceBonusEvent then
		diceBonusEvent = Instance.new("RemoteEvent")
		diceBonusEvent.Name = "DiceBonus"
		diceBonusEvent.Parent = inventoryRemotes
	end

	-- ‡∏™‡πà‡∏á‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡πÑ‡∏õ‡∏¢‡∏±‡∏á client
	diceBonusEvent:FireClient(player, 2)

	-- ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
	local message = "üé≤‚ú® ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ï‡πâ‡∏°‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤ +2 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≠‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ!"

	-- ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå (‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏Å‡∏ß‡πà‡∏≤ +1)
	pcall(function()
		local soundService = game:GetService("SoundService")
		local sound = soundService:FindFirstChild("MagicItemUse") or Instance.new("Sound", soundService)
		sound.Name = "MagicItemUse"
		sound.SoundId = "rbxassetid://6026984224"
		sound.Volume = 0.7
		sound:Play()
	end)

	return true, message
end

-- ====== ‡πÄ‡∏û‡∏¥‡πà‡∏° UseHandlers ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏° Crystal ======

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
local function isPlayerMoving(playerId)
	-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≤‡∏Å boardSystem
	local boardSystem = _G.BoardSystem or (_G.GameManager and _G.GameManager.boardSystem)

	if not boardSystem then
		return false
	end

	-- ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà
	if boardSystem.playerMovementState and boardSystem.playerMovementState[playerId] then
		local state = boardSystem.playerMovementState[playerId]
		if state == "auto_complete" or state == "need_choice" then
			return true
		end
	end

	-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡πâ‡∏≤‡∏ß‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
	if boardSystem.playerRemainingSteps and boardSystem.playerRemainingSteps[playerId] and 
		boardSystem.playerRemainingSteps[playerId] > 0 then
		return true
	end

	return false
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡∏±‡∏•
local function startCrystalMovement(player, steps)
	local playerId = player.UserId

	-- ‡∏î‡∏∂‡∏á boardService ‡∏à‡∏≤‡∏Å _G
	local boardService = _G.BoardService or _G.BoardSystem
	if not boardService then
		return false, "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏ô"
	end

	-- ‡∏î‡∏∂‡∏á remotes ‡∏à‡∏≤‡∏Å ReplicatedStorage
	local remotes = game:GetService("ReplicatedStorage"):WaitForChild("Remotes")
	local boardRemotes = remotes:WaitForChild("BoardRemotes")
	local crystalMoveEvent = boardRemotes:FindFirstChild("CrystalMove")

	-- ‡∏™‡∏£‡πâ‡∏≤‡∏á RemoteEvent ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
	if not crystalMoveEvent then
		crystalMoveEvent = Instance.new("RemoteEvent")
		crystalMoveEvent.Name = "CrystalMove"
		crystalMoveEvent.Parent = boardRemotes
	end

	-- ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡∏ù‡∏±‡πà‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡πÅ‡∏ö‡∏ö Crystal
	if boardService.ProcessCrystalMove then
		local success = boardService.ProcessCrystalMove(player, steps)
		if success then
			-- ‡πÅ‡∏à‡πâ‡∏á client ‡∏ß‡πà‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡∏±‡∏•
			crystalMoveEvent:FireClient(player, steps)
			return true, "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡∏±‡∏• " .. steps .. " ‡∏Å‡πâ‡∏≤‡∏ß"
		else
			return false, "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏î‡∏¥‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡∏±‡∏•‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ"
		end
	else
		return false, "‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡∏±‡∏•"
	end
end

-- Crystal 1 Handler
ItemData.UseHandlers.crystal_1 = function(player, itemData)
	-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
	local turnSystem = _G.GameManager and _G.GameManager.turnSystem
	if not turnSystem then
		return false, "‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
	end

	local playerId = player.UserId

	if turnSystem:GetCurrentPlayerTurn() ~= playerId then
		return false, "‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡∏±‡∏•‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"
	end

	-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
	if isPlayerMoving(playerId) then
		return false, "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡∏±‡∏•‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏î‡πâ"
	end

	-- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡∏±‡∏•
	local success, message = startCrystalMovement(player, 1)

	if success then
		-- ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
		local notificationMessage = "üîÆ ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡∏±‡∏• 1 ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏î‡∏¥‡∏ô 1 ‡∏Å‡πâ‡∏≤‡∏ß"

		-- ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå
		pcall(function()
			local soundService = game:GetService("SoundService")
			local sound = soundService:FindFirstChild("CrystalUse") or Instance.new("Sound", soundService)
			sound.Name = "CrystalUse"
			sound.SoundId = "rbxassetid://6896043782"
			sound.Volume = 0.8
			sound:Play()
		end)

		return true, notificationMessage
	else
		return false, message
	end
end

-- Crystal 2 Handler
ItemData.UseHandlers.crystal_2 = function(player, itemData)
	-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
	local turnSystem = _G.GameManager and _G.GameManager.turnSystem
	if not turnSystem then
		return false, "‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
	end

	local playerId = player.UserId

	if turnSystem:GetCurrentPlayerTurn() ~= playerId then
		return false, "‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡∏±‡∏•‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"
	end

	-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
	if isPlayerMoving(playerId) then
		return false, "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡∏±‡∏•‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏î‡πâ"
	end

	-- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡∏±‡∏•
	local success, message = startCrystalMovement(player, 2)

	if success then
		-- ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
		local notificationMessage = "üîÆ‚ú® ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡∏±‡∏• 2 ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏î‡∏¥‡∏ô 2 ‡∏Å‡πâ‡∏≤‡∏ß"

		-- ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå
		pcall(function()
			local soundService = game:GetService("SoundService")
			local sound = soundService:FindFirstChild("CrystalUse") or Instance.new("Sound", soundService)
			sound.Name = "CrystalUse"
			sound.SoundId = "rbxassetid://6896043782"
			sound.Volume = 0.8
			sound:Play()
		end)

		return true, notificationMessage
	else
		return false, message
	end
end

-- Crystal 3 Handler
ItemData.UseHandlers.crystal_3 = function(player, itemData)
	-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
	local turnSystem = _G.GameManager and _G.GameManager.turnSystem
	if not turnSystem then
		return false, "‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
	end

	local playerId = player.UserId

	if turnSystem:GetCurrentPlayerTurn() ~= playerId then
		return false, "‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡∏±‡∏•‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"
	end

	-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
	if isPlayerMoving(playerId) then
		return false, "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡∏±‡∏•‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏î‡πâ"
	end

	-- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡∏±‡∏•
	local success, message = startCrystalMovement(player, 3)

	if success then
		-- ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
		local notificationMessage = "üîÆ‚ú®üí´ ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡∏±‡∏• 3 ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏î‡∏¥‡∏ô 3 ‡∏Å‡πâ‡∏≤‡∏ß"

		-- ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå
		pcall(function()
			local soundService = game:GetService("SoundService")
			local sound = soundService:FindFirstChild("CrystalUse") or Instance.new("Sound", soundService)
			sound.Name = "CrystalUse"
			sound.SoundId = "rbxassetid://6896043782"
			sound.Volume = 0.8
			sound:Play()
		end)

		return true, notificationMessage
	else
		return false, message
	end
end

return ItemData
