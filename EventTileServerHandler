-- EventTileServerHandler.server.lua
-- ‡∏ï‡∏±‡∏ß‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏ù‡∏±‡πà‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
-- Version: 1.3.0 - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏°

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local ServerStorage = game:GetService("ServerStorage")

-- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Debug Mode
local DEBUG = true
local function log(msg) if DEBUG then print("[EventTileServer] " .. msg) end end

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á Remote Events
local remotes = ReplicatedStorage:WaitForChild("Remotes")
local eventTileRemotes = remotes:FindFirstChild("EventTileRemotes") or Instance.new("Folder")
eventTileRemotes.Name = "EventTileRemotes"
eventTileRemotes.Parent = remotes

local moneyEventRemote = eventTileRemotes:FindFirstChild("MoneyEvent") or Instance.new("RemoteEvent")
moneyEventRemote.Name = "MoneyEvent"
moneyEventRemote.Parent = eventTileRemotes

-- ‡πÄ‡∏û‡∏¥‡πà‡∏° InventoryRemote ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏≠‡πÄ‡∏ó‡∏°
local inventoryRemote = eventTileRemotes:FindFirstChild("InventoryRemote") or Instance.new("RemoteEvent")
inventoryRemote.Name = "InventoryRemote"
inventoryRemote.Parent = eventTileRemotes

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á/‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö InventoryRemotes
local inventoryRemotes = remotes:FindFirstChild("InventoryRemotes")
if not inventoryRemotes then
	inventoryRemotes = Instance.new("Folder")
	inventoryRemotes.Name = "InventoryRemotes"
	inventoryRemotes.Parent = remotes
	log("‡∏™‡∏£‡πâ‡∏≤‡∏á InventoryRemotes folder ‡πÉ‡∏´‡∏°‡πà")
end

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á AddItem RemoteEvent ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
local addItemRemote = inventoryRemotes:FindFirstChild("AddItem")
if not addItemRemote then
	addItemRemote = Instance.new("RemoteEvent")
	addItemRemote.Name = "AddItem"
	addItemRemote.Parent = inventoryRemotes
	log("‡∏™‡∏£‡πâ‡∏≤‡∏á AddItem RemoteEvent ‡πÉ‡∏´‡∏°‡πà")
end

local uiRemotes = remotes:WaitForChild("UIRemotes")
local updatePlayerStatsEvent = uiRemotes:FindFirstChild("UpdatePlayerStats")
local statChangedEvent = uiRemotes:FindFirstChild("StatChanged")

-- ‡∏´‡∏≤ ItemData ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ
local ItemData

-- ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÇ‡∏´‡∏•‡∏î ItemData ‡πÅ‡∏ö‡∏ö‡∏ï‡πà‡∏≤‡∏á‡πÜ
local function loadItemData()
	-- ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡∏à‡∏≤‡∏Å ReplicatedStorage.SharedModules
	if ReplicatedStorage:FindFirstChild("SharedModules") and 
		ReplicatedStorage.SharedModules:FindFirstChild("ItemData") then
		local success, result = pcall(function()
			return require(ReplicatedStorage.SharedModules.ItemData)
		end)
		if success then
			ItemData = result
			log("‡πÇ‡∏´‡∏•‡∏î ItemData ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏à‡∏≤‡∏Å ReplicatedStorage.SharedModules")
			return true
		end
	end

	-- ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡∏à‡∏≤‡∏Å ReplicatedStorage ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
	if ReplicatedStorage:FindFirstChild("ItemData") then
		local success, result = pcall(function()
			return require(ReplicatedStorage.ItemData)
		end)
		if success then
			ItemData = result
			log("‡πÇ‡∏´‡∏•‡∏î ItemData ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏à‡∏≤‡∏Å ReplicatedStorage")
			return true
		end
	end

	-- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏≠‡∏á
	ItemData = {
		Items = {
			dice_bonus_1 = {
				id = "dice_bonus_1",
				name = "Dice Bonus +1",
				description = "‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ï‡πâ‡∏°‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤ +1 ‡πÉ‡∏ô‡∏ï‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ",
				type = 4, -- SPECIAL
				rarity = 2,
				stackable = true,
				maxStack = 5,
				usable = true,
				consumable = true,
				iconId = "rbxassetid://6732233429"
			},
			dice_bonus_2 = {
				id = "dice_bonus_2",
				name = "Dice Bonus +2",
				description = "‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ï‡πâ‡∏°‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤ +2 ‡πÉ‡∏ô‡∏ï‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ",
				type = 4, -- SPECIAL
				rarity = 3,
				stackable = true,
				maxStack = 3,
				usable = true,
				consumable = true,
				iconId = "rbxassetid://6732233532"
			}
		},
		GetItemById = function(self, id)
			return self.Items[id]
		end
	}

	log("‡∏™‡∏£‡πâ‡∏≤‡∏á ItemData ‡πÄ‡∏≠‡∏á‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏°‡∏î‡∏π‡∏•")
	return true
end

-- ‡πÇ‡∏´‡∏•‡∏î ItemData
loadItemData()

-- ‡∏´‡∏≤ PlayerManager
local function getPlayerManager()
	-- ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏ß‡∏¥‡∏ò‡∏µ
	if _G.GameManager and _G.GameManager.playerManager then 
		log("‡∏û‡∏ö PlayerManager ‡πÉ‡∏ô _G.GameManager")
		return _G.GameManager.playerManager 
	end
	if _G.PlayerManager then 
		log("‡∏û‡∏ö PlayerManager ‡πÉ‡∏ô _G")
		return _G.PlayerManager 
	end

	-- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö ‡∏™‡∏£‡πâ‡∏≤‡∏á stub
	log("‡πÑ‡∏°‡πà‡∏û‡∏ö PlayerManager ‡∏™‡∏£‡πâ‡∏≤‡∏á stub")
	return {
		GetPlayerData = function(_, player) return {stats = {money = 1000}} end,
		UpdatePlayerStats = function(_, player, stats)
			log("‚ö†Ô∏è [STUB] UpdatePlayerStats ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö " .. player.Name .. " - ‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡∏°‡πà: " .. (stats.money or "N/A"))
			return true
		end
	}
end

-- ‡∏´‡∏≤ InventoryService ‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ
local function findInventoryService()
	log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ InventoryService...")

	-- 1. ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡∏à‡∏≤‡∏Å _G.GameManager
	if _G.GameManager then
		if _G.GameManager.inventoryService then
			log("‡∏û‡∏ö inventoryService ‡πÉ‡∏ô _G.GameManager")
			return _G.GameManager.inventoryService
		end
		if _G.GameManager.inventoryManager then
			log("‡∏û‡∏ö inventoryManager ‡πÉ‡∏ô _G.GameManager")
			return _G.GameManager.inventoryManager
		end
	end

	-- 2. ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡∏à‡∏≤‡∏Å _G ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
	if _G.InventoryService then
		log("‡∏û‡∏ö InventoryService ‡πÉ‡∏ô _G")
		return _G.InventoryService
	end
	if _G.InventoryManager then
		log("‡∏û‡∏ö InventoryManager ‡πÉ‡∏ô _G")
		return _G.InventoryManager
	end

	-- 3. ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡∏à‡∏≤‡∏Å ServerStorage
	local moduleNames = {"InventoryService", "InventoryManager", "InventorySystem"}

	for _, name in ipairs(moduleNames) do
		if ServerStorage:FindFirstChild(name) then
			local success, module = pcall(function()
				return require(ServerStorage[name])
			end)

			if success and module then
				log("‡∏û‡∏ö‡πÅ‡∏•‡∏∞‡πÇ‡∏´‡∏•‡∏î " .. name .. " ‡∏à‡∏≤‡∏Å ServerStorage")
				return module
			end
		end
	end

	-- 4. ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡∏à‡∏≤‡∏Å ServerScriptService
	local ServerScriptService = game:GetService("ServerScriptService")
	if ServerScriptService then
		local servicesFolder = ServerScriptService:FindFirstChild("Services")
		if servicesFolder then
			for _, name in ipairs(moduleNames) do
				if servicesFolder:FindFirstChild(name) then
					local success, module = pcall(function()
						return require(servicesFolder[name])
					end)

					if success and module then
						log("‡∏û‡∏ö‡πÅ‡∏•‡∏∞‡πÇ‡∏´‡∏•‡∏î " .. name .. " ‡∏à‡∏≤‡∏Å ServerScriptService.Services")
						return module
					end
				end
			end
		end
	end

	-- 5. ‡∏´‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏î‡πÜ ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á stub
	log("‡πÑ‡∏°‡πà‡∏û‡∏ö InventoryService ‡πÉ‡∏î‡πÜ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á stub...")
	return {
		AddItemToPlayer = function(_, player, itemId, quantity)
			log("‚ö†Ô∏è [STUB] AddItemToPlayer ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö " .. player.Name .. " - ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°: " .. itemId .. " ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: " .. quantity)
			return true
		end
	}
	end

	-- ‡∏´‡∏≤ InventoryManager ‡∏´‡∏£‡∏∑‡∏≠ InventoryService
local inventoryService = findInventoryService()

-- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
local function updatePlayerMoney(player, amount)
	local playerManager = getPlayerManager()

	-- ‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
	local playerData = playerManager.GetPlayerData(playerManager, player)
	if not playerData or not playerData.stats then
		log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô")
		return false
	end

	-- ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡∏°‡πà
	local oldMoney = playerData.stats.money or 0
	if type(oldMoney) ~= "number" then oldMoney = 0 end
	local newMoney = oldMoney + amount

	-- ‡∏•‡∏≠‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏ï‡πà‡∏≤‡∏á‡πÜ
	local success = false

	-- ‡∏ß‡∏¥‡∏ò‡∏µ 1: ‡πÉ‡∏ä‡πâ UpdatePlayerStats
	if playerManager.UpdatePlayerStats then
		success = pcall(function()
			return playerManager.UpdatePlayerStats(playerManager, player, {money = newMoney})
		end)
	end

	-- ‡∏ñ‡πâ‡∏≤‡∏ß‡∏¥‡∏ò‡∏µ 1 ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏•‡∏≠‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏∑‡πà‡∏ô
	if not success then
		-- ‡∏ß‡∏¥‡∏ò‡∏µ 2: ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
		if playerData.stats then
			playerData.stats.money = newMoney
			success = true
		end

		-- ‡∏ß‡∏¥‡∏ò‡∏µ 3: ‡∏™‡πà‡∏á event ‡πÑ‡∏õ‡∏¢‡∏±‡∏á client
		if statChangedEvent then
			statChangedEvent:FireClient(player, {
				money = {oldValue = oldMoney, newValue = newMoney}
			})
		end

		-- ‡∏ß‡∏¥‡∏ò‡∏µ 4: ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å SyncPlayerStats
		if playerManager.SyncPlayerStats then
			pcall(function() playerManager.SyncPlayerStats(playerManager, player) end)
		end
	end

	log((success and "üí∞ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " or "‚ùå ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏á‡∏¥‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ") .. oldMoney .. " ‚Üí " .. newMoney)
	return success
end

-- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á (‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô InventoryService)
local function addItemDirectly(player, itemId, quantity)
	log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏° " .. itemId .. " ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö " .. player.Name)

	-- ‡∏•‡∏≠‡∏á‡∏´‡∏≤ DataStore ‡∏´‡∏£‡∏∑‡∏≠ PlayerData ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏≠‡πÄ‡∏ó‡∏°
	local playerManager = getPlayerManager()
	local playerData = playerManager.GetPlayerData(playerManager, player)

	if not playerData then
		log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÑ‡∏î‡πâ")
		return false
	end

	-- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÉ‡∏ô PlayerData ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
	if not playerData.inventory then
		playerData.inventory = {items = {}}
	end

	if not playerData.inventory.items then
		playerData.inventory.items = {}
	end

	-- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ
	if playerData.inventory.items[itemId] then
		playerData.inventory.items[itemId] = playerData.inventory.items[itemId] + (quantity or 1)
	else
		playerData.inventory.items[itemId] = quantity or 1
	end

	log("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏° " .. itemId .. " ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô " .. quantity .. " ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö " .. player.Name .. " ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á")

	-- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ Client
	if statChangedEvent then
		statChangedEvent:FireClient(player, {
			inventory = {
				oldValue = {},
				newValue = playerData.inventory
			}
		})
	end

	return true
	end

	-- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô - ‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏°
local function addItemToPlayer(player, itemId, quantity)
	quantity = quantity or 1
	log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏° " .. itemId .. " ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô " .. quantity .. " ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö " .. player.Name)

	local success = false

	-- 1. ‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏ß‡∏¥‡∏ò‡∏µ AddItemToPlayer ‡∏Ç‡∏≠‡∏á inventoryService
	if inventoryService and typeof(inventoryService.AddItemToPlayer) == "function" then
		success = pcall(function()
			log("‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ inventoryService.AddItemToPlayer")
			return inventoryService:AddItemToPlayer(player, itemId, quantity)
		end)

		if success then
			log("‚úÖ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1 ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
			return true
		end
	end

	-- 2. ‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏ß‡∏¥‡∏ò‡∏µ GetPlayerInventory ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏Å AddItem ‡∏Ç‡∏≠‡∏á inventory object
	if not success and inventoryService and typeof(inventoryService.GetPlayerInventory) == "function" then
		success = pcall(function()
			log("‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ inventoryService.GetPlayerInventory ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏Å AddItem")
			local inventory = inventoryService:GetPlayerInventory(player)
			if inventory and typeof(inventory.AddItem) == "function" then
				local itemData
				if ItemData and typeof(ItemData.GetItemById) == "function" then
					itemData = ItemData:GetItemById(itemId)
				elseif ItemData and ItemData.Items and ItemData.Items[itemId] then
					itemData = ItemData.Items[itemId]
				end

				if itemData then
					return inventory:AddItem(itemData, quantity)
				end
			end
			return false
		end)

		if success then
			log("‚úÖ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2 ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
			return true
		end
		end

		-- 3. ‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ InventoryRemotes.AddItem ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
if not success and addItemRemote then
	success = pcall(function()
		log("‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 3: ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ addItemRemote (InventoryRemotes.AddItem) ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á")

		-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ OnServerEvent handlers ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
		local hasHandlers = false
		for _, connection in pairs(getconnections(addItemRemote.OnServerEvent)) do
			hasHandlers = true
			break
		end

		-- ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ handlers ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏™‡∏±‡∏Å‡∏Ñ‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ö event ‡∏ô‡∏µ‡πâ
		if hasHandlers then
			-- ‡πÄ‡∏û‡∏¥‡πà‡∏° handler ‡πÉ‡∏´‡∏°‡πà
			local connectionDone = false

			addItemRemote.OnServerEvent:Connect(function(fromPlayer, fromItemId, fromQuantity)
				if fromPlayer == player and fromItemId == itemId and fromQuantity == quantity then
					connectionDone = true
				end
			end)

			-- ‡∏¢‡∏¥‡∏á event
			addItemRemote:FireClient(player, itemId, quantity)

			-- ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà
			wait(0.1)
			return connectionDone
		else
			return false
		end
	end)

	if success then
		log("‚úÖ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 3 ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
		return true
	end
	end

	-- 4. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á (‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á PlayerData.inventory)
if not success then
	success = pcall(function()
		log("‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 4: ‡∏•‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡∏ó‡∏µ‡πà PlayerData")
		return addItemDirectly(player, itemId, quantity)
	end)

	if success then
		log("‚úÖ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 4 ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
		return true
	end
	end

	-- 5. ‡∏™‡∏£‡πâ‡∏≤‡∏á/‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Event ‡πÉ‡∏´‡∏°‡πà‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
if not success then
	log("‚ùå ‡∏ó‡∏∏‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡∏•‡∏≠‡∏á‡∏™‡πà‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡πÉ‡∏´‡πâ Client ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏á")

	-- ‡∏™‡πà‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏ú‡πà‡∏≤‡∏ô inventoryRemote
	if inventoryRemote then
		inventoryRemote:FireClient(player, itemId, quantity)
		log("‡∏™‡πà‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏ú‡πà‡∏≤‡∏ô inventoryRemote ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Client ‡πÅ‡∏•‡πâ‡∏ß")
		return true
	end

	-- ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ inventoryRemote ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
	local newRemote = Instance.new("RemoteEvent")
	newRemote.Name = "DirectInventoryUpdate"
	newRemote.Parent = eventTileRemotes
	newRemote:FireClient(player, {
		action = "addItem",
		itemId = itemId,
		quantity = quantity
	})
	log("‡∏™‡∏£‡πâ‡∏≤‡∏á DirectInventoryUpdate ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡πÑ‡∏õ‡∏¢‡∏±‡∏á Client ‡πÅ‡∏•‡πâ‡∏ß")
	return true
	end

	log("‚ùì ‡∏ó‡∏∏‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÑ‡∏î‡πâ")
return false
end

-- ‡∏£‡∏±‡∏ö‡∏ü‡∏±‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏à‡∏≤‡∏Å client - MoneyEvent
moneyEventRemote.OnServerEvent:Connect(function(player, command, amount)
	log("‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: " .. tostring(command) .. " ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: " .. tostring(amount))

	if command == "updateMoney" and amount > 0 then
		updatePlayerMoney(player, amount)
	end
end)

-- ‡∏£‡∏±‡∏ö‡∏ü‡∏±‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏à‡∏≤‡∏Å client - InventoryRemote
inventoryRemote.OnServerEvent:Connect(function(player, command, itemId, quantity)
	log("‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ñ‡∏•‡∏±‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡∏°: " .. tostring(command) .. " ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°: " .. tostring(itemId) .. " ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: " .. tostring(quantity))

	if command == "addItem" and itemId then
		addItemToPlayer(player, itemId, quantity or 1)
	end
end)

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á handler ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö AddItem ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
if addItemRemote then
	local hasHandler = false
	for _, connection in pairs(getconnections(addItemRemote.OnServerEvent)) do
		hasHandler = true
		break
	end

	if not hasHandler then
		log("‡∏™‡∏£‡πâ‡∏≤‡∏á handler ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö addItemRemote")
		addItemRemote.OnServerEvent:Connect(function(player, itemId, quantity)
			log("‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ú‡πà‡∏≤‡∏ô addItemRemote: ‡πÑ‡∏≠‡πÄ‡∏ó‡∏° " .. tostring(itemId) .. " ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô " .. tostring(quantity))
			addItemToPlayer(player, itemId, quantity or 1)
		end)
	end
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏á‡∏¥‡∏ô
local function testUpdateMoney(player, amount)
	-- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô ‡πÉ‡∏ä‡πâ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏£‡∏Å‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
	if not player then
		local players = Players:GetPlayers()
		if #players == 0 then return false end
		player = players[1]
	end

	-- ‡∏™‡∏∏‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏∞‡∏ö‡∏∏
	amount = amount or math.random(500, 2000)

	log("‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏á‡∏¥‡∏ô " .. player.Name .. " ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô " .. amount)

	-- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á event ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á client
	local success = updatePlayerMoney(player, amount)
	if success then moneyEventRemote:FireClient(player, amount, true) end

	return success
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°
local function testAddItem(player, itemId)
	-- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô ‡πÉ‡∏ä‡πâ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏£‡∏Å‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
	if not player then
		local players = Players:GetPlayers()
		if #players == 0 then return false end
		player = players[1]
	end

	-- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÑ‡∏≠‡πÄ‡∏ó‡∏° ‡πÉ‡∏ä‡πâ dice_bonus_1
	itemId = itemId or "dice_bonus_1"

	log("‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏° " .. player.Name .. " ‡πÑ‡∏≠‡πÄ‡∏ó‡∏° " .. itemId)

	-- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á event ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á client
	local success = addItemToPlayer(player, itemId, 1)

	return success
end

-- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏ô global
_G.TestUpdateMoney = testUpdateMoney
_G.TestAddItem = testAddItem

log("‡∏£‡∏∞‡∏ö‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏ù‡∏±‡πà‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß - ‡∏û‡∏¥‡∏°‡∏û‡πå _G.TestUpdateMoney() ‡∏´‡∏£‡∏∑‡∏≠ _G.TestAddItem() ‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö")
