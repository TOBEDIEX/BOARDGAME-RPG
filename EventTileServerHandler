-- EventTileServerHandler.server.lua
-- ‡∏ï‡∏±‡∏ß‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏ù‡∏±‡πà‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå (‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö‡πÑ‡∏Ñ‡∏•‡πÄ‡∏≠‡∏ô‡∏ï‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏•‡∏±‡∏Å)
-- Version: 1.1.0 - Optimized

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

-- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Debug Mode
local DEBUG = true
local function log(msg) if DEBUG then print("[EventTileServer] " .. msg) end end

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á Remote Events
local remotes = ReplicatedStorage:WaitForChild("Remotes")
local eventTileRemotes = remotes:FindFirstChild("EventTileRemotes") or Instance.new("Folder")
eventTileRemotes.Name = "EventTileRemotes"
eventTileRemotes.Parent = remotes

local moneyEventRemote = eventTileRemotes:FindFirstChild("MoneyEvent") or Instance.new("RemoteEvent")
moneyEventRemote.Name = "MoneyEvent"
moneyEventRemote.Parent = eventTileRemotes

local uiRemotes = remotes:WaitForChild("UIRemotes")
local updatePlayerStatsEvent = uiRemotes:FindFirstChild("UpdatePlayerStats")
local statChangedEvent = uiRemotes:FindFirstChild("StatChanged")

-- ‡∏´‡∏≤ PlayerManager
local function getPlayerManager()
	-- ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏ß‡∏¥‡∏ò‡∏µ
	if _G.GameManager and _G.GameManager.playerManager then return _G.GameManager.playerManager end
	if _G.PlayerManager then return _G.PlayerManager end

	-- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö ‡∏™‡∏£‡πâ‡∏≤‡∏á stub
	log("‡πÑ‡∏°‡πà‡∏û‡∏ö PlayerManager ‡∏™‡∏£‡πâ‡∏≤‡∏á stub")
	return {
		GetPlayerData = function(_, player) return {stats = {money = 1000}} end,
		UpdatePlayerStats = function(_, player, stats)
			log("‚ö†Ô∏è [STUB] UpdatePlayerStats ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö " .. player.Name .. " - ‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡∏°‡πà: " .. (stats.money or "N/A"))
			return true
		end
	}
end

-- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
local function updatePlayerMoney(player, amount)
	local playerManager = getPlayerManager()

	-- ‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
	local playerData = playerManager.GetPlayerData(playerManager, player)
	if not playerData or not playerData.stats then
		log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô")
		return false
	end

	-- ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡∏°‡πà
	local oldMoney = playerData.stats.money or 0
	if type(oldMoney) ~= "number" then oldMoney = 0 end
	local newMoney = oldMoney + amount

	-- ‡∏•‡∏≠‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏ï‡πà‡∏≤‡∏á‡πÜ
	local success = false

	-- ‡∏ß‡∏¥‡∏ò‡∏µ 1: ‡πÉ‡∏ä‡πâ UpdatePlayerStats
	if playerManager.UpdatePlayerStats then
		success = pcall(function()
			return playerManager.UpdatePlayerStats(playerManager, player, {money = newMoney})
		end)
	end

	-- ‡∏ñ‡πâ‡∏≤‡∏ß‡∏¥‡∏ò‡∏µ 1 ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏•‡∏≠‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏∑‡πà‡∏ô
	if not success then
		-- ‡∏ß‡∏¥‡∏ò‡∏µ 2: ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
		if playerData.stats then
			playerData.stats.money = newMoney
			success = true
		end

		-- ‡∏ß‡∏¥‡∏ò‡∏µ 3: ‡∏™‡πà‡∏á event ‡πÑ‡∏õ‡∏¢‡∏±‡∏á client
		if statChangedEvent then
			statChangedEvent:FireClient(player, {
				money = {oldValue = oldMoney, newValue = newMoney}
			})
		end

		-- ‡∏ß‡∏¥‡∏ò‡∏µ 4: ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å SyncPlayerStats
		if playerManager.SyncPlayerStats then
			pcall(function() playerManager.SyncPlayerStats(playerManager, player) end)
		end
	end

	log((success and "üí∞ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " or "‚ùå ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏á‡∏¥‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ") .. oldMoney .. " ‚Üí " .. newMoney)
	return success
end

-- ‡∏£‡∏±‡∏ö‡∏ü‡∏±‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏à‡∏≤‡∏Å client
moneyEventRemote.OnServerEvent:Connect(function(player, command, amount)
	log("‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: " .. tostring(command) .. " ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: " .. tostring(amount))

	if command == "updateMoney" and amount > 0 then
		updatePlayerMoney(player, amount)
	end
end)

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö
local function testUpdateMoney(player, amount)
	-- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô ‡πÉ‡∏ä‡πâ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏£‡∏Å‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
	if not player then
		local players = Players:GetPlayers()
		if #players == 0 then return false end
		player = players[1]
	end

	-- ‡∏™‡∏∏‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏∞‡∏ö‡∏∏
	amount = amount or math.random(500, 2000)

	log("‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏á‡∏¥‡∏ô " .. player.Name .. " ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô " .. amount)

	-- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á event ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á client
	local success = updatePlayerMoney(player, amount)
	if success then moneyEventRemote:FireClient(player, amount, true) end

	return success
end

-- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏ô global
_G.TestUpdateMoney = testUpdateMoney

log("‡∏£‡∏∞‡∏ö‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏ù‡∏±‡πà‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß - ‡∏û‡∏¥‡∏°‡∏û‡πå _G.TestUpdateMoney() ‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö")
