-- ClassData.lua
-- ข้อมูลและคุณสมบัติของคลาสต่างๆ ในเกม
-- Version: 2.0.0 (Updated)
-- วางที่: ReplicatedStorage/SharedModules/ClassData.lua

local ClassData = {}

-- ข้อมูลคลาสทั้งหมด
ClassData.Classes = {
	-- ===== สายนักรบ (คลาสเริ่มต้น) =====
	Warrior = {
		DisplayName = "Warrior",
		Description = "A sword man",
		IconAssetId = "rbxassetid://0", -- แทนที่ด้วย Asset ID จริง
		BaseStats = {
			MaxHP = 125,
			MaxMP = 50,
			ATK = 95,
			DEF = 75,
			MAGIC = 10,
			AGI = 40,
		},
		NextClass = "Knight",
		UpgradeCondition = { Type = "Level", Value = 10 },
	},

	-- ===== สายขโมย (คลาสเริ่มต้น) =====
	Thief = {
		DisplayName = "Thief",
		Description = "A thief man",
		IconAssetId = "rbxassetid://0", -- แทนที่ด้วย Asset ID จริง
		BaseStats = {
			MaxHP = 100,
			MaxMP = 60,
			ATK = 75,
			DEF = 30,
			MAGIC = 30,
			AGI = 80,
		},
		NextClass = "Assassin",
		UpgradeCondition = { Type = "Level", Value = 10 },
	},

	-- ===== สายเวทย์ (คลาสเริ่มต้น) =====
	Mage = {
		DisplayName = "Mage",
		Description = "A magic man",
		IconAssetId = "rbxassetid://0", -- แทนที่ด้วย Asset ID จริง
		BaseStats = {
			MaxHP = 85,
			MaxMP = 120,
			ATK = 25,
			DEF = 35,
			MAGIC = 95,
			AGI = 50,
		},
		NextClass = "Wizard",
		UpgradeCondition = { Type = "Level", Value = 10 },
	},

	-- ===== คลาสอัพเกรดของ Warrior =====
	Knight = {
		DisplayName = "Knight",
		Description = "นักรบผู้ช่ำชอง เกราะหนาและพลังโจมตีที่หนักหน่วงขึ้น สามารถปกป้องเพื่อนร่วมทีมได้",
		IconAssetId = "rbxassetid://0", -- แทนที่ด้วย Asset ID จริง
		BaseStats = {
			MaxHP = 180,
			MaxMP = 65,
			ATK = 120,
			DEF = 100,
			MAGIC = 15,
			AGI = 45,
		},
		NextClass = "Paladin",
		UpgradeCondition = { Type = "Quest", Value = "ProveYourValor" },
	},

	Paladin = {
		DisplayName = "Paladin",
		Description = "อัศวินศักดิ์สิทธิ์ ผู้ผสานพลังแห่งการต่อสู้เข้ากับการปกป้องและเวทมนตร์สนับสนุน",
		IconAssetId = "rbxassetid://0", -- แทนที่ด้วย Asset ID จริง
		BaseStats = {
			MaxHP = 250,
			MaxMP = 100,
			ATK = 150,
			DEF = 140,
			MAGIC = 50,
			AGI = 50,
		},
		NextClass = nil, -- คลาสสูงสุดในสายนี้
		UpgradeCondition = nil,
	},

	-- ===== คลาสอัพเกรดของ Mage =====
	Wizard = {
		DisplayName = "Wizard",
		Description = "เชี่ยวชาญเวทมนตร์ธาตุต่างๆ มีพลังทำลายล้างสูงขึ้นและคาถาที่ซับซ้อนกว่าเดิม",
		IconAssetId = "rbxassetid://0", -- แทนที่ด้วย Asset ID จริง
		BaseStats = {
			MaxHP = 110,
			MaxMP = 180,
			ATK = 35,
			DEF = 45,
			MAGIC = 130,
			AGI = 60,
		},
		NextClass = "Archmage",
		UpgradeCondition = { Type = "Item", Value = "AncientGrimoire" },
	},

	Archmage = {
		DisplayName = "Archmage",
		Description = "ผู้บรรลุศาสตร์แห่งเวทมนตร์ขั้นสูงสุด ควบคุมพลังอันมหาศาลและคาถาที่เปลี่ยนแปลงสนามรบได้",
		IconAssetId = "rbxassetid://0", -- แทนที่ด้วย Asset ID จริง
		BaseStats = {
			MaxHP = 140,
			MaxMP = 250,
			ATK = 45,
			DEF = 60,
			MAGIC = 180,
			AGI = 70,
		},
		NextClass = nil,
		UpgradeCondition = nil,
	},

	-- ===== คลาสอัพเกรดของ Thief =====
	Assassin = {
		DisplayName = "Assassin",
		Description = "เชี่ยวชาญการลอบสังหาร สร้างความเสียหายคริติคอลอย่างรุนแรงและเคลื่อนไหวในเงามืด",
		IconAssetId = "rbxassetid://0", -- แทนที่ด้วย Asset ID จริง
		BaseStats = {
			MaxHP = 130,
			MaxMP = 80,
			ATK = 110,
			DEF = 45,
			MAGIC = 40,
			AGI = 120,
		},
		NextClass = "Shadow",
		UpgradeCondition = { Type = "Skill", Value = "MasterStealth" },
	},

	Shadow = {
		DisplayName = "Shadow",
		Description = "ปรมาจารย์แห่งเงา ผู้ใช้ทักษะลอบเร้นและการโจมตีที่ศัตรูไม่อาจคาดเดาได้",
		IconAssetId = "rbxassetid://0", -- แทนที่ด้วย Asset ID จริง
		BaseStats = {
			MaxHP = 160,
			MaxMP = 100,
			ATK = 140,
			DEF = 60,
			MAGIC = 55,
			AGI = 170,
		},
		NextClass = nil,
		UpgradeCondition = nil,
	},
}

-- ฟังก์ชันช่วยเหลือ
function ClassData:GetClassInfo(className)
	return self.Classes[className]
end

function ClassData:GetBaseStats(className)
	local info = self:GetClassInfo(className)
	return info and info.BaseStats
end

function ClassData:GetNextClass(className)
	local info = self:GetClassInfo(className)
	return info and info.NextClass
end

function ClassData:GetUpgradeCondition(className)
	local info = self:GetClassInfo(className)
	return info and info.UpgradeCondition
end

-- ฟังก์ชันสำหรับดึงคลาสเริ่มต้นทั้งหมด
function ClassData:GetStarterClasses()
	return {"Warrior", "Thief", "Mage"}
end

-- ฟังก์ชันตรวจสอบว่าเป็นคลาสเริ่มต้นหรือไม่
function ClassData:IsStarterClass(className)
	local starterClasses = self:GetStarterClasses()
	for _, class in ipairs(starterClasses) do
		if class == className then
			return true
		end
	end
	return false
end

return ClassData
