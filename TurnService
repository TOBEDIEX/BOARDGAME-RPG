-- TurnService.server.lua
-- จัดการระบบเทิร์นและลำดับผู้เล่น
-- Version: 2.0.0

local ServerStorage = game:GetService("ServerStorage")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

-- โหลดโมดูล
local TurnSystem = require(ServerStorage.Modules.TurnSystem)

-- สร้าง Service object เพื่อ return
local TurnService = {}

-- หา GameManager จาก global variable
local function getGameManager()
	local startTime = tick()
	local timeout = 10 -- วินาที

	while not _G.GameManager do
		if tick() - startTime > timeout then
			warn("Timeout waiting for GameManager in TurnService")
			return nil
		end
		wait(0.1)
	end

	return _G.GameManager
end

-- รับ Player Manager
local function getPlayerManager()
	local gameManager = getGameManager()
	return gameManager and gameManager.playerManager
end

-- รับ Board System
local function getBoardSystem()
	local gameManager = getGameManager()
	return gameManager and gameManager.boardSystem
end

-- รับ Remote Events
local remotes = ReplicatedStorage:WaitForChild("Remotes")
local gameRemotes = remotes:WaitForChild("GameRemotes")
local uiRemotes = remotes:WaitForChild("UIRemotes")
local boardRemotes = remotes:WaitForChild("BoardRemotes")

-- ฟังก์ชันเริ่มต้นบริการ
function TurnService:Initialize()
	print("TurnService initializing...")

	-- สร้างระบบเทิร์น
	local turnSystem = TurnSystem.new()

	-- ตั้งค่าการสื่อสารกับ Remote Events
	turnSystem:InitializeRemotes(gameRemotes)

	-- ดึง GameManager
	local gameManager = getGameManager()
	if not gameManager then
		warn("GameManager not found, TurnService initialization delayed")
		spawn(function()
			wait(5) -- รอเพิ่มเติม
			TurnService:Initialize() -- ลองอีกครั้ง
		end)
		return nil
	end

	-- ตั้งค่า GameManager
	gameManager.turnSystem = turnSystem

	-- ตรวจสอบว่ามี Remote Event ที่จำเป็นหรือไม่
	if not uiRemotes:FindFirstChild("UpdateTurnDetails") then
		local updateTurnDetailsEvent = Instance.new("RemoteEvent")
		updateTurnDetailsEvent.Name = "UpdateTurnDetails"
		updateTurnDetailsEvent.Parent = uiRemotes
	end

	-- ตั้งค่า Event handlers

	-- เมื่อเริ่มเทิร์น
	turnSystem.onTurnStart = function(playerID)
		print("Turn started for player " .. playerID)

		-- สร้างข้อมูลสำหรับ UI
		local player = Players:GetPlayerByUserId(playerID)
		if player then
			local playerName = player.Name
			local playerManager = getPlayerManager()
			local playerData = playerManager and playerManager:GetPlayerData(player)

			-- ส่งข้อมูลเพิ่มเติมไปยังทุกคลเอนต์
			uiRemotes:WaitForChild("UpdateTurnDetails"):FireAllClients({
				playerId = playerID,
				playerName = playerName,
				turnNumber = gameManager.gameState.currentTurn or 1,
				playerClass = playerData and playerData.class or "Unknown",
				playerLevel = playerData and playerData.stats and playerData.stats.level or 1
			})
		end
	end

	-- เมื่อจบเทิร์น
	turnSystem.onTurnEnd = function(playerID, reason)
		print("Turn ended for player " .. playerID .. " (Reason: " .. reason .. ")")

		-- อัปเดต game state
		if gameManager.gameState.currentTurn then
			gameManager.gameState.currentTurn = gameManager.gameState.currentTurn + 1
		else
			gameManager.gameState.currentTurn = 1
		end
	end

	-- เมื่ออัปเดตเวลาเทิร์น
	turnSystem.onTurnTimerUpdate = function(timeRemaining)
		-- ไม่ต้องทำอะไรเพิ่ม ข้อมูลจะถูกส่งไปยังคลเอนต์โดยตรง
	end

	-- เชื่อมต่อกับ BoardSystem เพื่อจบเทิร์นเมื่อเดินเสร็จ
	local boardSystem = getBoardSystem()
	if boardSystem then
		-- ไม่ต้องทำอะไรเพิ่ม BoardService จะจัดการเรื่องนี้แล้ว
	end

	-- เชื่อมต่อกับเหตุการณ์ผู้เล่นออกจากเกม
	Players.PlayerRemoving:Connect(function(player)
		turnSystem:HandlePlayerLeaving(player.UserId)
	end)

	-- เชื่อมต่อกับเหตุการณ์เริ่มเกม
	gameRemotes:WaitForChild("StartGame").OnServerEvent:Connect(function()
		-- สร้างลำดับเทิร์นจากผู้เล่นที่มีอยู่
		local playerManager = getPlayerManager()
		turnSystem:CreateTurnOrderFromActivePlayers(playerManager)

		-- เริ่มระบบเทิร์น
		turnSystem:StartTurnSystem()

		-- ตั้งค่าจำนวนเทิร์นเริ่มต้น
		gameManager.gameState.currentTurn = 1
	end)

	-- เชื่อมต่อกับเหตุการณ์จบเกม
	gameRemotes:WaitForChild("EndGame").OnServerEvent:Connect(function()
		-- รีเซ็ตระบบเทิร์น
		turnSystem:Reset()
	end)

	print("TurnService initialized successfully")

	-- เพิ่มไปที่ global state เพื่อการใช้งานจากบริการอื่น
	_G.TurnSystem = turnSystem

	return turnSystem
end

-- เริ่มต้นบริการ
TurnService.system = TurnService:Initialize()

return TurnService
