-- ClassService.server.lua
-- จัดการระบบคลาสและการเลือกคลาส server-side
-- Version: 1.1.0 (Optimized)

local ServerStorage = game:GetService("ServerStorage")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

-- Get modules and remote events
local Modules = ServerStorage:WaitForChild("Modules")
local ClassSystem = require(Modules:WaitForChild("ClassSystem"))

-- Get GameManager from global
local function getGameManager()
	local startTime = tick()
	while not _G.GameManager and tick() - startTime < 10 do
		wait(0.1)
	end
	return _G.GameManager
end

-- Initialize service
local function initializeClassService()
	-- Wait for GameManager
	local gameManager = getGameManager()
	if not gameManager then return end

	-- Create ClassSystem if needed
	if not gameManager.classSystem then
		gameManager.classSystem = ClassSystem.new()
	end

	-- Get RemoteEvents
	local remotes = ReplicatedStorage:WaitForChild("Remotes")
	local uiRemotes = remotes:WaitForChild("UIRemotes")
	local classAssignedEvent = uiRemotes:WaitForChild("ClassAssigned")

	-- Set up class assignment handler
	local function handleClassAssignment(player, className, classData)
		-- Could update character appearance based on class
		-- Update UI
		classAssignedEvent:FireClient(player, className, classData)
	end

	-- Connect to class system events
	gameManager.classSystem.onClassAssigned = handleClassAssignment
end

-- Start the service
initializeClassService()
