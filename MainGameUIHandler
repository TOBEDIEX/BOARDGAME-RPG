-- FixedMainGameUIHandler.lua
-- แก้ไขสำหรับแสดงผลค่าสถานะระหว่างเล่นเกมอย่างถูกต้อง
-- Version: 3.1.0 (Enhanced UI Updates)

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

-- เปิดโหมดดีบักเพื่อช่วยในการแก้ไขปัญหา
local DEBUG_MODE = true

-- ฟังก์ชั่นสำหรับแสดงข้อความดีบัก
local function debugLog(message)
	if DEBUG_MODE then
		print("[MainGameUIHandler] " .. message)
	end
end

-- Get local player
local player = Players.LocalPlayer
if not player then
	Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
	player = Players.LocalPlayer
	debugLog("ได้รับ LocalPlayer")
end

-- โหลดข้อมูลคลาสจาก SharedModules
local ClassData = require(ReplicatedStorage:WaitForChild("SharedModules"):WaitForChild("ClassData"))

-- Get UI elements
local PlayerGui = player:WaitForChild("PlayerGui")
local MainGameUI = PlayerGui:WaitForChild("MainGameUI")
local StatusBarContainer = MainGameUI:WaitForChild("StatusBarContainer")

-- สีตามคลาส
local CLASS_COLORS = {
	Warrior = Color3.fromRGB(220, 60, 60),      -- สีแดง
	Knight = Color3.fromRGB(180, 60, 60),       -- สีแดงเข้ม
	Paladin = Color3.fromRGB(220, 100, 100),    -- สีแดงสว่าง

	Mage = Color3.fromRGB(70, 100, 200),        -- สีน้ำเงิน
	Wizard = Color3.fromRGB(50, 80, 180),       -- สีน้ำเงินเข้ม
	Archmage = Color3.fromRGB(90, 120, 220),    -- สีน้ำเงินสว่าง

	Thief = Color3.fromRGB(80, 180, 80),        -- สีเขียว
	Assassin = Color3.fromRGB(60, 160, 60),     -- สีเขียวเข้ม
	Shadow = Color3.fromRGB(100, 200, 100),     -- สีเขียวสว่าง

	Default = Color3.fromRGB(150, 150, 150)     -- สีกลาง
}

-- Variables
local myStatusBar = nil
local InventoryButton = MainGameUI:FindFirstChild("InventoryButton")
local QuestButton = MainGameUI:FindFirstChild("QuestButton")
local EndTurnButton = MainGameUI:FindFirstChild("EndTurnButton")
local CurrentTurnIndicator = MainGameUI:FindFirstChild("CurrentTurnIndicator")
local PopupUI = PlayerGui:WaitForChild("PopupUI")
local InventoryUI = PopupUI:FindFirstChild("InventoryUI")
local QuestUI = PopupUI:FindFirstChild("QuestUI")

-- Get remotes
local remotes = ReplicatedStorage:WaitForChild("Remotes")
local uiRemotes = remotes:WaitForChild("UIRemotes") 
local gameRemotes = remotes:WaitForChild("GameRemotes")

-- Get required remotes
local updatePlayerStatsEvent = uiRemotes:WaitForChild("UpdatePlayerStats")
local updateTurnEvent = gameRemotes:WaitForChild("UpdateTurn")
local endGameEvent = gameRemotes:WaitForChild("EndGame")
local updateTurnDetailsEvent = uiRemotes:FindFirstChild("UpdateTurnDetails")
local updateTurnTimerEvent = gameRemotes:FindFirstChild("UpdateTurnTimer")

-- เพิ่ม StatChanged event สำหรับการอัปเดตแบบทันที
local statChangedEvent = uiRemotes:FindFirstChild("StatChanged")
if not statChangedEvent then
	statChangedEvent = Instance.new("RemoteEvent")
	statChangedEvent.Name = "StatChanged"
	statChangedEvent.Parent = uiRemotes
	debugLog("สร้าง StatChanged RemoteEvent")
else
	debugLog("พบ StatChanged RemoteEvent อยู่แล้ว")
end

-- ข้อมูลสถานะเทิร์น
local turnTimerActive = false
local turnTimerConnection = nil
local turnDetailsData = nil
local isMyTurn = false

-- ข้อมูลคลาสและเลเวลของผู้เล่น
local playerClassInfo = {
	class = nil,
	level = 1,
	classLevel = 1,
	exp = 0,
	classExp = 0,
	nextLevelExp = 100,
	nextClassLevelExp = 150
}

-- ข้อมูลสถานะปัจจุบันของผู้เล่น
local currentPlayerStats = {
	hp = 100,
	maxHp = 100,
	mp = 50,
	maxMp = 50,
	attack = 10,
	defense = 10,
	magic = 10,
	magicDefense = 10,
	agility = 10,
	money = 100
}

-- Helper function for tweening
local function createTween(object, properties, duration, style, direction)
	local tweenInfo = TweenInfo.new(
		duration or 0.3,
		style or Enum.EasingStyle.Quad,
		direction or Enum.EasingDirection.Out
	)
	local tween = TweenService:Create(object, tweenInfo, properties)
	return tween
end

-- Setup player status bar
local function setupPlayerStatusBar()
	debugLog("กำลังตั้งค่าแถบสถานะผู้เล่น")

	-- Get template
	local template = StatusBarContainer:FindFirstChild("PlayerStatusBar")
	if not template then 
		debugLog("ไม่พบเทมเพลต PlayerStatusBar")
		return nil 
	end

	-- Check if my status bar already exists
	local existingStatusBar = StatusBarContainer:FindFirstChild("MyPlayerStatusBar")
	if existingStatusBar then
		debugLog("พบแถบสถานะที่มีอยู่แล้ว")
		return existingStatusBar
	end

	-- Create status bar for local player
	local myStatusBar = template:Clone()
	myStatusBar.Name = "MyPlayerStatusBar"
	myStatusBar.Visible = true
	myStatusBar.Parent = StatusBarContainer

	-- Set initial values
	if myStatusBar:FindFirstChild("PlayerName") then
		myStatusBar.PlayerName.Text = player.Name
		debugLog("ตั้งค่าชื่อผู้เล่น: " .. player.Name)
	end

	if myStatusBar:FindFirstChild("PlayerClass") then
		myStatusBar.PlayerClass.Text = "Unknown"
	end

	if myStatusBar:FindFirstChild("PlayerLevel") then
		myStatusBar.PlayerLevel.Text = "Lv.1"
	end

	-- Initialize HP and MP bars
	if myStatusBar:FindFirstChild("HPBar") and myStatusBar.HPBar:FindFirstChild("HPFill") then
		myStatusBar.HPBar.HPFill.Size = UDim2.new(1, 0, 1, 0)
		if myStatusBar.HPBar:FindFirstChild("HPText") then
			myStatusBar.HPBar.HPText.Text = "100/100"
		end
	end

	if myStatusBar:FindFirstChild("MPBar") and myStatusBar.MPBar:FindFirstChild("MPFill") then
		myStatusBar.MPBar.MPFill.Size = UDim2.new(1, 0, 1, 0)
		if myStatusBar.MPBar:FindFirstChild("MPText") then
			myStatusBar.MPBar.MPText.Text = "50/50"
		end
	end

	-- Initialize money
	if myStatusBar:FindFirstChild("MoneyContainer") and myStatusBar.MoneyContainer:FindFirstChild("MoneyAmount") then
		myStatusBar.MoneyContainer.MoneyAmount.Text = "100"
	end

	-- Initialize ExpBar if it exists
	if myStatusBar:FindFirstChild("ExpBar") and myStatusBar.ExpBar:FindFirstChild("ExpFill") then
		myStatusBar.ExpBar.ExpFill.Size = UDim2.new(0, 0, 1, 0)
		if myStatusBar.ExpBar:FindFirstChild("ExpText") then
			myStatusBar.ExpBar.ExpText.Text = "EXP: 0/100"
		end
	end

	-- Highlight player status bar
	myStatusBar.BackgroundColor3 = Color3.fromRGB(60, 80, 100)

	-- Add stroke if missing
	if not myStatusBar:FindFirstChild("UIStroke") then
		local stroke = Instance.new("UIStroke")
		stroke.Color = Color3.fromRGB(100, 150, 200)
		stroke.Thickness = 2
		stroke.Parent = myStatusBar
	end

	-- Hide template
	template.Visible = false

	debugLog("แถบสถานะถูกสร้างเรียบร้อย")

	return myStatusBar
end

-- Update player status bar with stats
local function updateMyStatusBar(stats)
	if not myStatusBar then
		myStatusBar = setupPlayerStatusBar()
		if not myStatusBar then 
			debugLog("ไม่สามารถสร้างแถบสถานะได้")
			return 
		end
	end

	-- เก็บค่าสถานะปัจจุบันไว้
	for key, value in pairs(stats) do
		if currentPlayerStats[key] ~= nil then
			currentPlayerStats[key] = value
		end
	end

	debugLog("อัปเดตแถบสถานะด้วยข้อมูล: HP=" .. (stats.hp or "N/A") .. 
		"/" .. (stats.maxHp or "N/A") .. 
		" MP=" .. (stats.mp or "N/A") .. 
		"/" .. (stats.maxMp or "N/A"))

	-- Update level if provided
	if stats.level and myStatusBar:FindFirstChild("PlayerLevel") then
		myStatusBar.PlayerLevel.Text = "Lv." .. stats.level
		playerClassInfo.level = stats.level
		debugLog("อัปเดตเลเวลเป็น: " .. stats.level)
	end

	-- Update class if provided
	if stats.class and myStatusBar:FindFirstChild("PlayerClass") then
		myStatusBar.PlayerClass.Text = stats.class
		playerClassInfo.class = stats.class
		debugLog("อัปเดตคลาสเป็น: " .. stats.class)

		-- ปรับสีตามคลาส
		local classColor = CLASS_COLORS[stats.class] or CLASS_COLORS.Default

		-- ปรับสีแถบสถานะ
		if myStatusBar:FindFirstChild("UIStroke") then
			myStatusBar.UIStroke.Color = classColor
		end

		-- ปรับสี HP และ MP ตามคลาส
		if myStatusBar:FindFirstChild("HPBar") and myStatusBar.HPBar:FindFirstChild("HPFill") then
			-- ปรับสี HP ตามคลาส
			if stats.class == "Warrior" or stats.class == "Knight" or stats.class == "Paladin" then
				myStatusBar.HPBar.HPFill.BackgroundColor3 = Color3.fromRGB(220, 60, 60) -- สีแดงเข้มสำหรับนักรบ
			elseif stats.class == "Mage" or stats.class == "Wizard" or stats.class == "Archmage" then
				myStatusBar.HPBar.HPFill.BackgroundColor3 = Color3.fromRGB(180, 60, 60) -- สีแดงอ่อนสำหรับเมจ
			elseif stats.class == "Thief" or stats.class == "Assassin" or stats.class == "Shadow" then
				myStatusBar.HPBar.HPFill.BackgroundColor3 = Color3.fromRGB(200, 80, 60) -- สีแดงส้มสำหรับโจร
			end
		end

		if myStatusBar:FindFirstChild("MPBar") and myStatusBar.MPBar:FindFirstChild("MPFill") then
			-- ปรับสี MP ตามคลาส
			if stats.class == "Warrior" or stats.class == "Knight" or stats.class == "Paladin" then
				myStatusBar.MPBar.MPFill.BackgroundColor3 = Color3.fromRGB(60, 60, 180) -- สีน้ำเงินอ่อนสำหรับนักรบ
			elseif stats.class == "Mage" or stats.class == "Wizard" or stats.class == "Archmage" then
				myStatusBar.MPBar.MPFill.BackgroundColor3 = Color3.fromRGB(80, 80, 220) -- สีน้ำเงินสดสำหรับเมจ
			elseif stats.class == "Thief" or stats.class == "Assassin" or stats.class == "Shadow" then
				myStatusBar.MPBar.MPFill.BackgroundColor3 = Color3.fromRGB(60, 100, 180) -- สีน้ำเงินอมเขียวสำหรับโจร
			end
		end

		-- แสดงการแจ้งเตือนคลาส
		local notification = MainGameUI:FindFirstChild("ClassNotification")
		if not notification then
			-- หา Notification ที่มีอยู่ก่อน
			local existingNotification = MainGameUI:FindFirstChild("NotificationSystem")
			if existingNotification and existingNotification:IsA("Frame") then
				notification = existingNotification:Clone()
				notification.Name = "ClassNotification"
				notification.Visible = true

				-- ปรับแต่งการแสดงผล
				if notification:FindFirstChild("NotificationText") then
					notification.NotificationText.Text = "Playing as " .. stats.class .. " (HP: " .. stats.maxHp .. 
						", MP: " .. stats.maxMp .. ")"
				end

				notification.Parent = MainGameUI
				notification:TweenPosition(
					UDim2.new(0.5, 0, 0.3, 0),
					Enum.EasingDirection.Out,
					Enum.EasingStyle.Back,
					0.5,
					true
				)

				-- ซ่อนหลังจาก 4 วินาที
				delay(4, function()
					notification:TweenPosition(
						UDim2.new(0.5, 0, -0.2, 0),
						Enum.EasingDirection.In,
						Enum.EasingStyle.Quad,
						0.5,
						true,
						function()
							notification:Destroy()
						end
					)
				end)
			end
		end
	end

	-- Update HP if provided
	if stats.hp and stats.maxHp and 
		myStatusBar:FindFirstChild("HPBar") and 
		myStatusBar.HPBar:FindFirstChild("HPFill") then

		local hpRatio = stats.hp / stats.maxHp
		debugLog("อัตราส่วน HP: " .. hpRatio .. " (" .. stats.hp .. "/" .. stats.maxHp .. ")")

		-- เพิ่มการเช็คเพื่อป้องกันค่าที่ไม่ถูกต้อง
		if hpRatio >= 0 and hpRatio <= 1 then
			createTween(
				myStatusBar.HPBar.HPFill,
				{Size = UDim2.new(hpRatio, 0, 1, 0)},
				0.3
			):Play()
		else
			warn("[MainGameUIHandler] อัตราส่วน HP ไม่ถูกต้อง: " .. hpRatio)
			-- แก้ไขให้แสดงค่าที่ถูกต้อง
			hpRatio = math.clamp(hpRatio, 0, 1)
			myStatusBar.HPBar.HPFill.Size = UDim2.new(hpRatio, 0, 1, 0)
		end

		if myStatusBar.HPBar:FindFirstChild("HPText") then
			myStatusBar.HPBar.HPText.Text = math.floor(stats.hp) .. "/" .. math.floor(stats.maxHp)
		end

		-- Change color based on HP ratio if no class is set
		if not playerClassInfo.class then
			if hpRatio < 0.3 then
				myStatusBar.HPBar.HPFill.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
			elseif hpRatio < 0.6 then
				myStatusBar.HPBar.HPFill.BackgroundColor3 = Color3.fromRGB(255, 200, 50)
			else
				myStatusBar.HPBar.HPFill.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
			end
		end
	end

	-- Update MP if provided
	if stats.mp and stats.maxMp and 
		myStatusBar:FindFirstChild("MPBar") and 
		myStatusBar.MPBar:FindFirstChild("MPFill") then

		local mpRatio = stats.mp / stats.maxMp
		debugLog("อัตราส่วน MP: " .. mpRatio .. " (" .. stats.mp .. "/" .. stats.maxMp .. ")")

		-- เพิ่มการเช็คเพื่อป้องกันค่าที่ไม่ถูกต้อง
		if mpRatio >= 0 and mpRatio <= 1 then
			createTween(
				myStatusBar.MPBar.MPFill,
				{Size = UDim2.new(mpRatio, 0, 1, 0)},
				0.3
			):Play()
		else
			warn("[MainGameUIHandler] อัตราส่วน MP ไม่ถูกต้อง: " .. mpRatio)
			-- แก้ไขให้แสดงค่าที่ถูกต้อง
			mpRatio = math.clamp(mpRatio, 0, 1)
			myStatusBar.MPBar.MPFill.Size = UDim2.new(mpRatio, 0, 1, 0)
		end

		if myStatusBar.MPBar:FindFirstChild("MPText") then
			myStatusBar.MPBar.MPText.Text = math.floor(stats.mp) .. "/" .. math.floor(stats.maxMp)
		end
	end

	-- Update money if provided
	if stats.money and 
		myStatusBar:FindFirstChild("MoneyContainer") and 
		myStatusBar.MoneyContainer:FindFirstChild("MoneyAmount") then

		-- สร้างแอนิเมชันเปลี่ยนแปลงเงิน
		local currentMoney = tonumber(myStatusBar.MoneyContainer.MoneyAmount.Text) or 0
		local newMoney = stats.money

		if newMoney > currentMoney then
			-- แอนิเมชันเมื่อได้เงินเพิ่ม
			myStatusBar.MoneyContainer.MoneyAmount.TextColor3 = Color3.fromRGB(100, 255, 100)

			local moneyUpTween = createTween(
				myStatusBar.MoneyContainer.MoneyAmount,
				{TextSize = 16},
				0.3,
				Enum.EasingStyle.Back
			)

			moneyUpTween:Play()
			moneyUpTween.Completed:Connect(function()
				createTween(
					myStatusBar.MoneyContainer.MoneyAmount,
					{TextSize = 12, TextColor3 = Color3.fromRGB(255, 255, 255)},
					0.3
				):Play()
			end)
		elseif newMoney < currentMoney then
			-- แอนิเมชันเมื่อเสียเงิน
			myStatusBar.MoneyContainer.MoneyAmount.TextColor3 = Color3.fromRGB(255, 100, 100)

			local moneyDownTween = createTween(
				myStatusBar.MoneyContainer.MoneyAmount,
				{TextSize = 14},
				0.3,
				Enum.EasingStyle.Bounce
			)

			moneyDownTween:Play()
			moneyDownTween.Completed:Connect(function()
				createTween(
					myStatusBar.MoneyContainer.MoneyAmount,
					{TextSize = 12, TextColor3 = Color3.fromRGB(255, 255, 255)},
					0.3
				):Play()
			end)
		end

		myStatusBar.MoneyContainer.MoneyAmount.Text = stats.money
	end

	-- อัปเดตค่าประสบการณ์ถ้ามี
	if stats.exp and stats.nextLevelExp and
		myStatusBar:FindFirstChild("ExpBar") and
		myStatusBar.ExpBar:FindFirstChild("ExpFill") then

		playerClassInfo.exp = stats.exp
		playerClassInfo.nextLevelExp = stats.nextLevelExp

		local expRatio = stats.exp / stats.nextLevelExp
		createTween(
			myStatusBar.ExpBar.ExpFill,
			{Size = UDim2.new(expRatio, 0, 1, 0)},
			0.5
		):Play()

		if myStatusBar.ExpBar:FindFirstChild("ExpText") then
			myStatusBar.ExpBar.ExpText.Text = "EXP: " .. math.floor(stats.exp) .. "/" .. math.floor(stats.nextLevelExp)
		end
	end
end

-- Update turn indicator function
local function updateTurnIndicator(turnDetails)
	if not CurrentTurnIndicator then return end

	local currentPlayerName = turnDetails.playerName or "Unknown"
	local turnNumber = turnDetails.turnNumber or 1
	local playerClass = turnDetails.playerClass or "Unknown"
	local playerLevel = turnDetails.playerLevel or 1
	local currentPlayerId = turnDetails.playerId

	-- Update turn text
	if CurrentTurnIndicator:FindFirstChild("TurnText") then
		CurrentTurnIndicator.TurnText.Text = currentPlayerName .. "'s Turn (Turn " .. turnNumber .. ")"
	end

	-- Update class and level info
	if CurrentTurnIndicator:FindFirstChild("PlayerClassLabel") then
		CurrentTurnIndicator.PlayerClassLabel.Text = "Class: " .. playerClass
	end

	if CurrentTurnIndicator:FindFirstChild("PlayerLevelLabel") then
		CurrentTurnIndicator.PlayerLevelLabel.Text = "Lv." .. playerLevel
	end

	-- Setup timer if available
	if CurrentTurnIndicator:FindFirstChild("TurnTimerFrame") then
		if turnTimerConnection then
			turnTimerConnection:Disconnect()
			turnTimerConnection = nil
		end
		CurrentTurnIndicator.TurnTimerFrame.Visible = true
	end

	-- Set turn status
	isMyTurn = (currentPlayerId == player.UserId)

	-- Highlight UI if it's player's turn
	if isMyTurn then
		-- Highlight status bar
		if myStatusBar then
			-- ใช้สีของคลาสในการไฮไลท์
			local highlightColor = CLASS_COLORS[playerClassInfo.class] or Color3.fromRGB(70, 120, 200)

			myStatusBar.BackgroundColor3 = highlightColor:Lerp(Color3.fromRGB(255, 255, 255), 0.7) -- ผสมกับสีขาวเพื่อให้สว่างขึ้น

			if myStatusBar:FindFirstChild("UIStroke") then
				myStatusBar.UIStroke.Color = highlightColor
				myStatusBar.UIStroke.Thickness = 3
			end
		end

		-- Animate turn indicator
		local originalPosition = CurrentTurnIndicator.Position
		local originalSize = CurrentTurnIndicator.Size

		local expandTween = createTween(
			CurrentTurnIndicator,
			{
				Size = UDim2.new(originalSize.X.Scale + 0.02, 0, originalSize.Y.Scale + 0.02, 0),
				Position = UDim2.new(originalPosition.X.Scale - 0.01, 0, originalPosition.Y.Scale - 0.01, 0),
				BackgroundColor3 = Color3.fromRGB(60, 140, 200)
			},
			0.5,
			Enum.EasingStyle.Back
		)

		local contractTween = createTween(
			CurrentTurnIndicator,
			{
				Size = originalSize,
				Position = originalPosition,
				BackgroundColor3 = Color3.fromRGB(50, 100, 150)
			},
			0.5,
			Enum.EasingStyle.Back
		)

		expandTween:Play()
		expandTween.Completed:Connect(function()
			contractTween:Play()
		end)

		-- ใช้ระบบแจ้งเตือนที่มีอยู่แล้ว
		local notification = MainGameUI:FindFirstChild("NotificationSystem")
		if notification then
			local newNotification = notification:Clone()
			newNotification.Name = "YourTurnNotification"
			newNotification.Visible = true

			-- ปรับแต่งการแสดงผล
			if newNotification:FindFirstChild("NotificationText") then
				newNotification.NotificationText.Text = "It's your turn!"
			end

			newNotification.Parent = MainGameUI
			newNotification:TweenPosition(
				UDim2.new(0.5, 0, 0.7, 0),
				Enum.EasingDirection.Out,
				Enum.EasingStyle.Back,
				0.7,
				true
			)

			-- ซ่อนหลังจาก 2 วินาที
			delay(2, function()
				newNotification:TweenPosition(
					UDim2.new(0.5, 0, 1.1, 0),
					Enum.EasingDirection.In,
					Enum.EasingStyle.Quad,
					0.5,
					true,
					function()
						newNotification:Destroy()
					end
				)
			end)
		end
	else
		-- Reset highlights if not player's turn
		if myStatusBar then
			-- ใช้สีของคลาสเป็นพื้นฐานแต่ทำให้เข้มขึ้น
			local baseColor = CLASS_COLORS[playerClassInfo.class] or Color3.fromRGB(60, 80, 100)
			myStatusBar.BackgroundColor3 = baseColor:Lerp(Color3.fromRGB(40, 40, 60), 0.7) -- ผสมกับสีเข้มเพื่อให้มืดลง

			if myStatusBar:FindFirstChild("UIStroke") then
				myStatusBar.UIStroke.Color = baseColor
				myStatusBar.UIStroke.Thickness = 2
			end
		end

		CurrentTurnIndicator.BackgroundColor3 = Color3.fromRGB(80, 80, 100)
	end

	-- Store latest turn data
	turnDetailsData = turnDetails
end

-- Update turn timer function
local function updateTurnTimer(timeRemaining)
	if not CurrentTurnIndicator or 
		not CurrentTurnIndicator:FindFirstChild("TurnTimerFrame") or
		not CurrentTurnIndicator.TurnTimerFrame:FindFirstChild("TimerFill") or
		not CurrentTurnIndicator.TurnTimerFrame:FindFirstChild("TimerText") then
		return
	end

	local timerFrame = CurrentTurnIndicator.TurnTimerFrame
	local timerFill = timerFrame.TimerFill
	local timerText = timerFrame.TimerText

	-- Update timer text
	timerText.Text = tostring(timeRemaining) .. "s"

	-- Calculate fill ratio (assuming max time is 120 seconds)
	local maxTime = 120
	local fillRatio = timeRemaining / maxTime

	-- Animate fill bar
	createTween(
		timerFill,
		{Size = UDim2.new(fillRatio, 0, 1, 0)},
		0.3
	):Play()

	-- Change color based on time remaining
	if timeRemaining <= 10 then
		timerFill.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
	elseif timeRemaining <= 30 then
		timerFill.BackgroundColor3 = Color3.fromRGB(255, 150, 50)
	else
		timerFill.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
	end
end

-- Setup End Turn button
local function setupEndTurnButton()
	if not EndTurnButton then return nil end

	-- Connect button click if not already connected
	if not EndTurnButton:GetAttribute("Connected") then
		EndTurnButton.MouseButton1Click:Connect(function()
			if isMyTurn then
				-- Send end turn command to server
				local turnActionEvent = gameRemotes:WaitForChild("TurnAction")
				turnActionEvent:FireServer("endTurn")

				-- Hide button
				EndTurnButton.Visible = false
			end
		end)

		EndTurnButton:SetAttribute("Connected", true)
	end

	-- Update button visibility based on turn
	RunService.Heartbeat:Connect(function()
		EndTurnButton.Visible = isMyTurn

		if isMyTurn then
			-- ใช้สีของคลาสสำหรับปุ่ม end turn
			local classColor = CLASS_COLORS[playerClassInfo.class] or Color3.fromRGB(60, 120, 180)
			EndTurnButton.BackgroundColor3 = classColor
			if EndTurnButton:FindFirstChild("UIStroke") then
				EndTurnButton.UIStroke.Color = classColor:Lerp(Color3.fromRGB(255, 255, 255), 0.5)
			end
		end
	end)

	return EndTurnButton
end

-- Setup button handlers
local function setupButtonHandlers()
	if InventoryButton and not InventoryButton:GetAttribute("Connected") then
		InventoryButton.MouseButton1Click:Connect(function()
			if InventoryUI then
				-- Toggle inventory UI
				InventoryUI.Visible = not InventoryUI.Visible

				-- Hide other popups
				if InventoryUI.Visible and QuestUI then
					QuestUI.Visible = false
				end

				-- Visual feedback
				InventoryButton.BackgroundColor3 = InventoryUI.Visible and 
					Color3.fromRGB(80, 120, 80) or Color3.fromRGB(50, 50, 50)
			end
		end)
		InventoryButton:SetAttribute("Connected", true)
	end

	if QuestButton and not QuestButton:GetAttribute("Connected") then
		QuestButton.MouseButton1Click:Connect(function()
			if QuestUI then
				-- Toggle quest UI
				QuestUI.Visible = not QuestUI.Visible

				-- Hide other popups
				if QuestUI.Visible and InventoryUI then
					InventoryUI.Visible = false
				end

				-- Visual feedback
				QuestButton.BackgroundColor3 = QuestUI.Visible and 
					Color3.fromRGB(80, 120, 80) or Color3.fromRGB(50, 50, 50)
			end
		end)
		QuestButton:SetAttribute("Connected", true)
	end

	-- ตรวจสอบปุ่มปิดใน PopupUI
	if InventoryUI and InventoryUI:FindFirstChild("CloseButton") and not InventoryUI.CloseButton:GetAttribute("Connected") then
		InventoryUI.CloseButton.MouseButton1Click:Connect(function()
			InventoryUI.Visible = false
			if InventoryButton then
				InventoryButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			end
		end)
		InventoryUI.CloseButton:SetAttribute("Connected", true)
	end

	if QuestUI and QuestUI:FindFirstChild("CloseButton") and not QuestUI.CloseButton:GetAttribute("Connected") then
		QuestUI.CloseButton.MouseButton1Click:Connect(function()
			QuestUI.Visible = false
			if QuestButton then
				QuestButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			end
		end)
		QuestUI.CloseButton:SetAttribute("Connected", true)
	end
end

-- แสดงการแจ้งเตือนการเลเวลอัพ (ใช้ระบบที่มีอยู่แล้ว)
local function showLevelUpNotification(newLevel, statIncreases)
	-- เช็คว่ามีระบบแจ้งเตือนอยู่แล้วหรือไม่
	local notification = MainGameUI:FindFirstChild("NotificationSystem")
	if notification then
		local levelUpNotif = notification:Clone()
		levelUpNotif.Name = "LevelUpNotification"
		levelUpNotif.Visible = true

		-- ปรับแต่งการแสดงผลให้เข้ากับการเลเวลอัพ
		if levelUpNotif:FindFirstChild("NotificationText") then
			local statText = "LEVEL UP! You reached level " .. newLevel .. "!\n"

			-- แสดงสถิติที่เพิ่มขึ้น
			for stat, increase in pairs(statIncreases) do
				if stat == "MaxHP" then
					statText = statText .. "HP +" .. increase .. " "
				elseif stat == "MaxMP" then
					statText = statText .. "MP +" .. increase .. " "
				elseif stat == "ATK" then
					statText = statText .. "ATK +" .. increase .. " "
				elseif stat == "DEF" then
					statText = statText .. "DEF +" .. increase .. " "
				end
			end

			levelUpNotif.NotificationText.Text = statText
			levelUpNotif.NotificationText.TextSize = 20
		end

		-- เปลี่ยนสีพื้นหลังให้ดูเด่นขึ้น
		levelUpNotif.BackgroundColor3 = Color3.fromRGB(80, 120, 200)

		levelUpNotif.Parent = MainGameUI

		-- แสดงการแจ้งเตือน
		levelUpNotif:TweenPosition(
			UDim2.new(0.5, 0, 0.4, 0),
			Enum.EasingDirection.Out,
			Enum.EasingStyle.Back,
			0.8,
			true
		)

		-- ซ่อนการแจ้งเตือนหลังจาก 5 วินาที
		delay(5, function()
			levelUpNotif:TweenPosition(
				UDim2.new(0.5, 0, -0.3, 0),
				Enum.EasingDirection.In,
				Enum.EasingStyle.Back,
				0.6,
				true,
				function()
					levelUpNotif:Destroy()
				end
			)
		end)
	end
end

-- Connect remote events
updatePlayerStatsEvent.OnClientEvent:Connect(function(playerId, stats)
	-- Only update for local player
	if playerId == player.UserId then
		debugLog("ได้รับอัปเดตค่าสถานะจากเซิร์ฟเวอร์: HP=" .. 
			(stats.hp or "N/A") .. "/" .. (stats.maxHp or "N/A") .. 
			" Class=" .. (stats.class or "N/A"))
		updateMyStatusBar(stats)
	end
end)

-- เพิ่มการรับอัปเดตค่าสถานะแบบทันทีทันใด
if statChangedEvent then
	statChangedEvent.OnClientEvent:Connect(function(changedStats)
		debugLog("ได้รับการอัปเดตค่าสถานะแบบทันที")

		-- สร้างอ็อบเจกต์สำหรับส่งไปยัง updateMyStatusBar
		local statsToUpdate = {}

		for stat, values in pairs(changedStats) do
			statsToUpdate[stat] = values.newValue
			currentPlayerStats[stat] = values.newValue
			debugLog("อัปเดตค่า " .. stat .. " จาก " .. values.oldValue .. " เป็น " .. values.newValue)
		end

		-- ต้องส่งค่า maxHp/maxMp ไปด้วยเสมอเพื่อให้คำนวณอัตราส่วนได้ถูกต้อง
		if statsToUpdate.hp and not statsToUpdate.maxHp then
			statsToUpdate.maxHp = currentPlayerStats.maxHp
		end

		if statsToUpdate.mp and not statsToUpdate.maxMp then
			statsToUpdate.maxMp = currentPlayerStats.maxMp
		end

		updateMyStatusBar(statsToUpdate)
	end)
	debugLog("เชื่อมต่อกับ StatChangedEvent เรียบร้อย")
else
	debugLog("ไม่พบ StatChangedEvent")
end

updateTurnEvent.OnClientEvent:Connect(function(currentPlayerId)
	-- Create minimal turn data if details haven't arrived yet
	local turnDetails = {
		playerId = currentPlayerId,
		playerName = "Unknown",
		turnNumber = 1,
		playerClass = "Unknown",
		playerLevel = 1
	}

	-- Find player name
	for _, plr in pairs(Players:GetPlayers()) do
		if plr.UserId == currentPlayerId then
			turnDetails.playerName = plr.Name
			break
		end
	end

	updateTurnIndicator(turnDetails)
end)

-- เชื่อมต่อกับการอัปเดตค่าประสบการณ์
local updateExpEvent = uiRemotes:FindFirstChild("UpdateExperience")
if updateExpEvent then
	updateExpEvent.OnClientEvent:Connect(function(expData)
		if not myStatusBar then return end

		if myStatusBar:FindFirstChild("ExpBar") and myStatusBar.ExpBar:FindFirstChild("ExpFill") then
			-- อัปเดตข้อมูลประสบการณ์
			playerClassInfo.exp = expData.exp
			playerClassInfo.nextLevelExp = expData.nextLevelExp
			playerClassInfo.classExp = expData.classExp
			playerClassInfo.nextClassLevelExp = expData.nextClassLevelExp

			-- อัปเดตแถบประสบการณ์
			local expRatio = expData.exp / expData.nextLevelExp
			createTween(
				myStatusBar.ExpBar.ExpFill,
				{Size = UDim2.new(expRatio, 0, 1, 0)},
				0.5
			):Play()

			if myStatusBar.ExpBar:FindFirstChild("ExpText") then
				myStatusBar.ExpBar.ExpText.Text = "EXP: " .. math.floor(expData.exp) .. "/" .. math.floor(expData.nextLevelExp)
			end
		end
	end)
end

-- เชื่อมต่อกับการเลเวลอัพ
local levelUpEvent = uiRemotes:WaitForChild("LevelUp")
levelUpEvent.OnClientEvent:Connect(function(newLevel, statIncreases)
	-- อัปเดตเลเวล
	playerClassInfo.level = newLevel

	-- แสดงการแจ้งเตือนการเลเวลอัพ
	showLevelUpNotification(newLevel, statIncreases)

	-- อัปเดตข้อความเลเวลในสถานะบาร์
	if myStatusBar and myStatusBar:FindFirstChild("PlayerLevel") then
		myStatusBar.PlayerLevel.Text = "Lv." .. newLevel
	end

	-- อัปเดตค่าสถานะหลังเลเวลอัพ
	-- (จะมี UpdatePlayerStats event มาจากเซิร์ฟเวอร์ด้วย)
	debugLog("เลเวลอัพเป็นเลเวล " .. newLevel)
end)

-- เชื่อมต่อกับการเลเวลอัพของคลาส
local classLevelUpEvent = uiRemotes:WaitForChild("ClassLevelUp")
classLevelUpEvent.OnClientEvent:Connect(function(newClassLevel, statIncreases, nextClass)
	-- อัปเดตเลเวลคลาส
	playerClassInfo.classLevel = newClassLevel

	-- แสดงการแจ้งเตือนเลเวลคลาสอัพ
	local notification = MainGameUI:FindFirstChild("NotificationSystem")
	if notification then
		local classLevelUpNotif = notification:Clone()
		classLevelUpNotif.Name = "ClassLevelUpNotification"
		classLevelUpNotif.Visible = true

		-- ปรับแต่งการแสดงผล
		if classLevelUpNotif:FindFirstChild("NotificationText") then
			local message = "CLASS LEVEL UP! " .. playerClassInfo.class .. " reached level " .. newClassLevel

			if nextClass then
				message = message .. "\nUpgrade to " .. nextClass .. " is now available!"
			end

			classLevelUpNotif.NotificationText.Text = message
		end

		-- ปรับสีตามคลาส
		local classColor = CLASS_COLORS[playerClassInfo.class] or Color3.fromRGB(80, 120, 200)
		classLevelUpNotif.BackgroundColor3 = classColor

		classLevelUpNotif.Parent = MainGameUI

		-- แสดงการแจ้งเตือน
		classLevelUpNotif:TweenPosition(
			UDim2.new(0.5, 0, 0.4, 0),
			Enum.EasingDirection.Out,
			Enum.EasingStyle.Back,
			0.8,
			true
		)

		-- ซ่อนหลังจาก 5 วินาที
		delay(5, function()
			classLevelUpNotif:TweenPosition(
				UDim2.new(0.5, 0, -0.3, 0),
				Enum.EasingDirection.In,
				Enum.EasingStyle.Back,
				0.6,
				true,
				function()
					classLevelUpNotif:Destroy()
				end
			)
		end)
	end

	debugLog("เลเวลคลาสอัพเป็นเลเวล " .. newClassLevel)
end)

if updateTurnDetailsEvent then
	updateTurnDetailsEvent.OnClientEvent:Connect(function(turnDetails)
		updateTurnIndicator(turnDetails)
	end)
end

if updateTurnTimerEvent then
	updateTurnTimerEvent.OnClientEvent:Connect(function(timeRemaining)
		updateTurnTimer(timeRemaining)
	end)
end

endGameEvent.OnClientEvent:Connect(function(reason)
	debugLog("เกมจบแล้ว: " .. reason)

	-- Show game over UI
	local GameOverScreen = PlayerGui:WaitForChild("GameOverScreen")
	if GameOverScreen then
		GameOverScreen.Enabled = true

		-- Hide main game UI
		MainGameUI.Enabled = false
		if PopupUI then
			PopupUI.Enabled = false
		end

		-- Display reason in game over screen
		local Background = GameOverScreen:FindFirstChild("Background")
		if Background then
			local WinnerAnnouncement = Background:FindFirstChild("WinnerAnnouncement")
			if WinnerAnnouncement then
				WinnerAnnouncement.Text = reason
			end
		end
	end
end)

-- Initialize UI
MainGameUI.Enabled = false -- Will be enabled by ClassSelectionHandler or server

if PopupUI then
	PopupUI.Enabled = true -- Container is visible, but individual UIs are hidden

	if InventoryUI then
		InventoryUI.Visible = false
	end

	if QuestUI then
		QuestUI.Visible = false
	end
end

-- Setup initial UI
myStatusBar = setupPlayerStatusBar()
setupButtonHandlers()
setupEndTurnButton()

-- เพิ่มการรับเหตุการณ์เมื่อ MainGameUI เปิดใช้งาน
MainGameUI:GetPropertyChangedSignal("Enabled"):Connect(function()
	if MainGameUI.Enabled then
		debugLog("MainGameUI เปิดใช้งานแล้ว")
		-- ให้แน่ใจว่าสถานะบาร์ถูกสร้างขึ้นมาแล้ว
		if not myStatusBar then
			myStatusBar = setupPlayerStatusBar()
		end
	end
end)

-- แสดงข้อความเริ่มต้น
debugLog("MainGameUIHandler พร้อมใช้งานแล้ว")
